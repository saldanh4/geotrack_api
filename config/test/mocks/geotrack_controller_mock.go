// Code generated by MockGen. DO NOT EDIT.
// Source: geotrack_api/internal/app/controller (interfaces: GeotrackController)
//
// Generated by this command:
//
//	mockgen -package=mocks geotrack_api/internal/app/controller GeotrackController
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockGeotrackController is a mock of GeotrackController interface.
type MockGeotrackController struct {
	ctrl     *gomock.Controller
	recorder *MockGeotrackControllerMockRecorder
	isgomock struct{}
}

// MockGeotrackControllerMockRecorder is the mock recorder for MockGeotrackController.
type MockGeotrackControllerMockRecorder struct {
	mock *MockGeotrackController
}

// NewMockGeotrackController creates a new mock instance.
func NewMockGeotrackController(ctrl *gomock.Controller) *MockGeotrackController {
	mock := &MockGeotrackController{ctrl: ctrl}
	mock.recorder = &MockGeotrackControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGeotrackController) EXPECT() *MockGeotrackControllerMockRecorder {
	return m.recorder
}

// CreateIP mocks base method.
func (m *MockGeotrackController) CreateIP(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateIP", c)
}

// CreateIP indicates an expected call of CreateIP.
func (mr *MockGeotrackControllerMockRecorder) CreateIP(c any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateIP", reflect.TypeOf((*MockGeotrackController)(nil).CreateIP), c)
}

// DeleteEntriesByIp mocks base method.
func (m *MockGeotrackController) DeleteEntriesByIp(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteEntriesByIp", c)
}

// DeleteEntriesByIp indicates an expected call of DeleteEntriesByIp.
func (mr *MockGeotrackControllerMockRecorder) DeleteEntriesByIp(c any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteEntriesByIp", reflect.TypeOf((*MockGeotrackController)(nil).DeleteEntriesByIp), c)
}

// GetEntriesByCountry mocks base method.
func (m *MockGeotrackController) GetEntriesByCountry(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetEntriesByCountry", c)
}

// GetEntriesByCountry indicates an expected call of GetEntriesByCountry.
func (mr *MockGeotrackControllerMockRecorder) GetEntriesByCountry(c any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEntriesByCountry", reflect.TypeOf((*MockGeotrackController)(nil).GetEntriesByCountry), c)
}

// GetEntriesByIp mocks base method.
func (m *MockGeotrackController) GetEntriesByIp(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetEntriesByIp", c)
}

// GetEntriesByIp indicates an expected call of GetEntriesByIp.
func (mr *MockGeotrackControllerMockRecorder) GetEntriesByIp(c any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEntriesByIp", reflect.TypeOf((*MockGeotrackController)(nil).GetEntriesByIp), c)
}

// GetNearestIpToSeSquare mocks base method.
func (m *MockGeotrackController) GetNearestIpToSeSquare(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetNearestIpToSeSquare", c)
}

// GetNearestIpToSeSquare indicates an expected call of GetNearestIpToSeSquare.
func (mr *MockGeotrackControllerMockRecorder) GetNearestIpToSeSquare(c any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNearestIpToSeSquare", reflect.TypeOf((*MockGeotrackController)(nil).GetNearestIpToSeSquare), c)
}
